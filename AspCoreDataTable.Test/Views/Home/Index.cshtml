@{
    ViewData["Title"] = "Home Page";

}


<br />
<br />
<div class="text-center">
    <h2 class="display-4">Test DataTable Application</h2>
</div>
<br />
<br />
<div class="row">
    <div class="col-md-12">
        @(Html.DataTableHelper<Person>("persontable")
            .LoadAction("/Home/LoadTable")
            .RowsCssCondition(p => p.PersonAdress.city, "Berlin","#f2dede")
            .Columns(column =>
            {
                column.CheckColumn(p => p.id).CheckAllEnabled();
                column.BoundColumn(p => p.id).Title("ID").IsPrimaryKey(true);
                column.BoundColumn(p => p.name).Title("Name").Searchable(Operation.StartsWith);
                column.BoundColumn(p => p.surname).Title("Surname").Searchable(Operation.StartsWith);
                column.BoundColumn(p => p.PersonAdress.city).Title("City").Searchable(Operation.StartsWith);
                column.BoundColumn(p => p.PersonAdress.country).Title("Country").Searchable(Operation.StartsWith);
              
                column.ActionColumn().Title("Actions").Actions(action =>
                {
                    action.ModalButton()
                        .Hidden(t => t.PersonAdress.city, "istanbul")
                        .Text("Edit")
                        .CssClass("btn btn-sm green btn-outline filter-submit margin-bottom green-haze")
                        .IClass("fa fa-edit")
                        .ActionInfo(new ActionInfo { actionUrl = "/Home/AddOrEdit", methodType = EnumHttpMethod.GET })
                        .BlockUI()
                        .Modal(EnumModalSize.Large)
                        .BackDropStatic();

                    action.ConfirmButton()
                        .Hidden(t => t.name, "Linda")
                        .Text("Delete")
                        .CssClass("btn btn-sm red btn-outline filter-submit margin-bottom red-haze")
                        .IClass("fa fa-trash-o")
                        .ActionInfo(new ActionInfo { actionUrl = "/Home/Delete", methodType = EnumHttpMethod.POST })
                        .BlockUI()
                        .ConfirmOption(new ConfirmOption("ConfirmMessage", "ConfirmTitle", ConfirmType.Sweet, ""));
                });
            })
            .ToolBarActions(action =>
            {
                action.ModalActionButton()
                    .FormSide(EnumFormSide.LetfSide)
                    .Text("Add New Person")
                    .Modal(EnumModalSize.Default)
                    .BackDropStatic()
                    .CssClass("btn btn-sm red btn-outline filter-submit margin-bottom red-haze")
                    .IClass("fa fa-plus")
                    .ActionInfo(new ActionInfo { actionUrl = "/Home/AddOrEdit/-1", methodType = EnumHttpMethod.GET })
                    .BlockUI();

            }, new TableExportSetting("Tools", "btn red btn-outline", false, true, true, true, EnumFormSide.RightSide))
            .Portlet("Person Table", System.Drawing.Color.Red, "fa fa-cogs")
            .CssClass("table table-striped table-hover table-bordered  dataTable no-footer")
            .StateSave(true)
        )

    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            var dt = Entity.Init('Home', 'formPerson', 'persontable', '.entitysubmit', 'Success!', 'Error');
          
        });
    </script>
}
